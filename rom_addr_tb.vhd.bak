--============================================================================--
-- Design unit  : Rom_controller module
--
-- File name    : Brom_addr_tb.vhd
--
-- Purpose      : generate address to read data
--
-- Note         :
--
-- Library      : shyloc_utils
--
-- Author       : Rui Yin
--
-- Instantiates : 

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

use work.all;

entity Brom_addr_tb is
end entity Brom_addr_tb;

architecture rtl of Brom_addr_tb is
component Brom_addr
    generic(
	width : integer:= 32;
	depth : integer:= 162;
	addr  : integer:=8);
     Port ( 
        clk : in STD_LOGIC;
        rst_n : in STD_LOGIC;
        CE : in STD_LOGIC;
	rom_addr: out std_logic_vector (addr-1 downto 0)
    );
end component;
--signal for UUT
       signal clk : STD_LOGIC := '0';
       signal rst_n :  STD_LOGIC := '0';
       signal CE : STD_LOGIC := '0';
       signal rom_addr: std_logic_vector (7 downto 0) := (others => '0');

begin
	--instantiate the UUT
uut_Brom_addr :Brom_addr
     generic map (
	width => 32,
	depth => 162,
	addr  => 8)
	
     Port map( 
        clk => clk,
        rst_n => rst_n,
        CE => CE,
	rom_addr => rom_addr
	);

    clk_process : process
	begin
	clk <= '1';
	wait for 10 ns;
	clk <= '0';
	wait for 10ns;
	end process;
	
	test_process : process
	begin
	 rst_n <= '0';
        wait for 40 ns; -- ????????????
        rst_n <= '1';
	wait;
        end process;
	process;
	CE <= '0';
	wait for 40ns;
	CE <= '1';
	wait for 3600ns;
	CE <= '0';
	wait for 40ns;

	end process;
end rtl;