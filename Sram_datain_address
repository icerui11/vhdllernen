--------------------------------------------------------------------------------
-- Company: <Name>
--
-- File: Sram_address.vhd
-- File history:
--      <Revision number>: <Date>: <Comments>
--      <Revision number>: <Date>: <Comments>
--      <Revision number>: <Date>: <Comments>
--
-- Description: 
--
-- <Description here>
--
-- Targeted device: <Family::SmartFusion2> <Die::M2S150TS> <Package::1152 FC>
-- Author: <Name>
--
--------------------------------------------------------------------------------

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;


entity Sram_address is
    generic(
	width : integer:= 32;
	depth : integer:= 128;
	addr  : integer:=7);
    
     Port ( 
        clk : in STD_LOGIC;
        rst_n : in STD_LOGIC;
        CE : in STD_LOGIC;
        ready : in std_logic;
        Datain_newvalid : out std_logic;
	rom_addr: out std_logic_vector (addr-1 downto 0)
    );
end Sram_address;

architecture rtl of Sram_address is
	signal address : unsigned(31 downto 0) := (others => '0');
        signal Datain_newvalid_temp : std_logic := '0';
begin

    process(clk, rst_n, CE, ready)
    begin
	 if rst_n = '0' then 
            address <= (others => '0');
            Datain_newvalid_temp <= '0';
           elsif rising_edge(clk) then
             if ready = '0' then
                address <= (others => '0');
                Datain_newvalid_temp <= '0';
             else
              if (CE = '1' and (address < depth)) then
                 address <= address + 1;
                 Datain_newvalid_temp <= '1';
              elsif (CE = '0' and (address < depth)) then
                 address <= address; 
                 Datain_newvalid_temp <= '0'; 
	          else
	            address <= (others => '0');
                    Datain_newvalid_temp <= '0';
              end if;
	     end if;
          end if;
    end process;
	rom_addr <= std_logic_vector(address(addr-1 downto 0));
        Datain_newvalid <= Datain_newvalid_temp;
 
end rtl;
