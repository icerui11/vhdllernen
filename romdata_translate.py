# -*- coding: utf-8 -*-

# 给定的十六进制数据
hex_data = """
3A 30 32 30 30 30 30 30 34 30 30 30 30 46 41 0D 
0A 3A 32 30 30 30 30 30 30 30 37 46 46 45 37 46 
46 46 37 46 30 30 38 30 46 46 38 30 30 31 38 30 
30 30 37 46 46 44 30 30 46 46 30 30 36 30 32 30 
32 30 35 30 31 30 31 30 34 30 30 30 30 30 36 30 
32 30 32 30 35 30 31 30 31 30 30 42 0D 0A 3A 32 
30 30 30 32 30 30 30 30 30 32 30 33 30 34 30 35 
30 36 30 37 30 38 30 39 30 37 30 36 30 35 30 34 
30 33 30 32 30 31 30 32 30 32 30 33 30 34 30 35 
30 36 30 37 30 38 30 39 30 37 30 36 30 35 30 34 
30 33 30 32 30 32 30 39 30 0D 0A 3A 32 30 30 30 
34 30 30 30 31 30 31 30 31 38 32 30 32 38 33 30 
33 38 34 30 34 38 33 38 33 30 32 38 32 30 31 38 
31 30 31 30 30 38 30 38 30 43 31 30 31 34 31 38 
31 43 32 30 32 34 31 43 31 38 31 34 31 30 30 43 
30 38 30 38 31 43 0D 0A 3A 32 30 30 30 36 30 30 
30 30 34 30 34 30 36 30 38 30 41 30 43 30 45 31 
30 31 32 30 45 30 43 30 41 30 38 30 36 30 34 30 
34 30 32 30 32 30 33 30 34 30 35 30 36 30 37 30 
38 30 39 30 37 30 36 30 35 30 34 30 33 30 32 30 
32 39 46 0D 0A 3A 32 30 30 30 38 30 30 30 30 30 
30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 
30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 
30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 
30 31 30 31 30 31 30 31 30 31 30 31 30 31 34 31 
0D 0A 3A 32 30 30 30 41 30 30 30 30 31 30 31 30 
31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 
31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 
31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 
31 30 31 30 31 30 31 30 31 30 31 32 30 0D 0A 3A 
32 30 30 30 43 30 30 30 30 31 30 31 30 31 30 31 
30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 
30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 
30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 
30 31 30 31 30 31 30 31 30 30 0D 0A 3A 32 30 30 
30 45 30 30 30 30 31 30 31 30 31 30 31 30 31 30 
31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 
31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 
31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 
31 30 31 30 31 45 30 0D 0A 3A 30 30 30 30 30 30 
30 31 46 46 0D 0A 
"""

# 移除空格和换行符
hex_data_cleaned = hex_data.replace("\n", "").replace(" ", "").replace("\r", "")

# 每8个字符分为一组，转换为VHDL格式
vhdl_data = ["X\"{}\"".format(hex_data_cleaned[i:i+8]) for i in range(0, len(hex_data_cleaned), 8)]

# 打印结果，生成VHDL数组初始化代码
print("type ROM_ARRAY is array (0 to {}) of STD_LOGIC_VECTOR(31 downto 0);".format(len(vhdl_data)-1))
print("constant ROM_CONTENT: ROM_ARRAY := (")
for i, data in enumerate(vhdl_data):
    end = "," if i < len(vhdl_data)-1 else ");"
    print("    {} => {}{}".format(i, data, end))

