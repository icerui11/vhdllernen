--============================================================================--
-- Design unit  : bram module
--
-- File name    : Bram_addr.vhd
--
-- Purpose      : generate address to write data
--
-- Note         :
--
-- Library      : 
--
-- Author       : Rui Yin
--
-- Instantiates : 

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

library src;

entity bram_addr is
    generic(
	width : integer:= 64;
	addr  : integer:=12);
    
     Port ( 
        clk : in STD_LOGIC;
        rst_n : in STD_LOGIC;
        wen : in STD_LOGIC;
	ram_addr: out std_logic_vector (addr-1 downto 0)
    );
end bram_addr;

architecture rtl of bram_addr is
	signal address : unsigned(addr-1 downto 0) := (others => '0');

begin

    process(clk, rst_n, wen)
    begin
        if rising_edge(clk) then
	      if rst_n = '0' then
	    address <= (others => '0');
          elsif wen = '1' then
               address <= address + 1;                        -- increment the address
	      else
		    address <= address;
          end if;
	end if;
    end process;

	ram_addr <= std_logic_vector(address(addr-1 downto 0));

end rtl;
